# ios-build.yml - Fixed version with better API key handling
name: "iOS Build and Deploy"

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      publish:
        required: false
        type: boolean
        default: false
      version:
        required: true
        type: string
      branch:
        required: true
        type: string
    secrets:
      APPLE_ID:
        required: true
      APPLE_ID_PASSWORD:
        required: true
      APP_STORE_CONNECT_API_KEY_ID:
        required: true
      APP_STORE_CONNECT_API_ISSUER_ID:
        required: true
      APP_STORE_CONNECT_API_KEY:
        required: true
      MATCH_PASSWORD:
        required: true
      MATCH_GIT_URL:
        required: true
      MATCH_PRIVATE_KEY:
        required: false
      NPM_TOKEN:
        required: true

jobs:
  build-ios:
    runs-on: macos-15
    timeout-minutes: 45
    
    environment: 
      name: ${{ inputs.branch == 'master' && 'production' || inputs.branch }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          cache: "yarn"

      - name: Install Node modules
        run: yarn ci

      - name: Setup Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
          working-directory: ios

      - name: Cache Build Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ios/DerivedData
            ~/Library/Caches/CocoaPods
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-ios-${{ hashFiles('ios/Podfile.lock', 'yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ios-

      - name: Install Pod Dependencies
        run: cd ios && pod install

      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode.app

      # 🔧 ปรับปรุง: API Key setup with better error handling
      - name: Setup App Store Connect API Key
        run: |
          mkdir -p /tmp/ios-keys
          
          echo "🔍 Checking API Key secret..."
          if [ -z "${{ secrets.APP_STORE_CONNECT_API_KEY }}" ]; then
            echo "❌ APP_STORE_CONNECT_API_KEY secret is empty!"
            exit 1
          fi
          
          echo "📝 Creating API Key file..."
          # ลบ whitespace และ newlines ก่อน decode
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | tr -d '\n\r' | base64 -d > /tmp/ios-keys/AuthKey.p8
          
          echo "✅ Verifying API Key file..."
          if [ ! -f "/tmp/ios-keys/AuthKey.p8" ]; then
            echo "❌ API Key file was not created!"
            exit 1
          fi
          
          # ตรวจสอบ file size
          FILE_SIZE=$(stat -f%z /tmp/ios-keys/AuthKey.p8)
          echo "📊 API Key file size: $FILE_SIZE bytes"
          
          if [ "$FILE_SIZE" -lt 100 ]; then
            echo "⚠️ API Key file seems too small, might be corrupted"
            echo "📄 File content preview:"
            head -2 /tmp/ios-keys/AuthKey.p8
            exit 1
          fi
          
          # ตรวจสอบ format
          echo "🔍 Checking API Key format..."
          FIRST_LINE=$(head -1 /tmp/ios-keys/AuthKey.p8)
          if [[ "$FIRST_LINE" != "-----BEGIN PRIVATE KEY-----" ]]; then
            echo "❌ Invalid API Key format. Expected '-----BEGIN PRIVATE KEY-----', got: $FIRST_LINE"
            exit 1
          fi
          
          echo "✅ API Key setup completed successfully"
          ls -la /tmp/ios-keys/

      # Setup SSH only if needed for Match
      - name: Setup SSH for Match
        if: inputs.environment == 'release'
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.MATCH_PRIVATE_KEY }}

      # Debug build for testing
      - name: Build iOS Debug
        if: inputs.environment == 'debug'
        run: |
          cd ios
          xcodebuild -workspace TestCICD.xcworkspace \
                    -scheme TestCICD \
                    -configuration Debug \
                    -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
                    -derivedDataPath ./DerivedData \
                    build

      # Release builds
      - name: Build Release (No Deploy)
        if: inputs.environment == 'release' && inputs.publish == false
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        run: |
          cd ios
          bundle exec fastlane build_only

      # 🔧 ปรับปรุง: Build and Deploy with better error handling
      - name: Build and Deploy to TestFlight/App Store
        if: inputs.environment == 'release' && inputs.publish == true
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_PATH: /tmp/ios-keys/AuthKey.p8
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          VERSION_NUMBER: ${{ inputs.version }}
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          cd ios
          
          echo "🔍 Pre-flight checks..."
          echo "📋 API Key ID: $APP_STORE_CONNECT_API_KEY_ID"
          echo "📋 Issuer ID: $APP_STORE_CONNECT_API_ISSUER_ID"
          echo "📋 API Key Path: $APP_STORE_CONNECT_API_KEY_PATH"
          echo "📋 Version: $VERSION_NUMBER"
          echo "📋 Build: $BUILD_NUMBER"
          echo "📋 Branch: ${{ inputs.branch }}"
          
          # ตรวจสอบ API key file อีกครั้งก่อน deploy
          if [ ! -f "$APP_STORE_CONNECT_API_KEY_PATH" ]; then
            echo "❌ API Key file not found at: $APP_STORE_CONNECT_API_KEY_PATH"
            exit 1
          fi
          
          echo "✅ All checks passed, starting deployment..."
          bundle exec fastlane deploy_${{ inputs.branch }}

      # Upload artifacts for debug/non-deploy builds
      - name: Upload Build Artifacts
        if: inputs.publish == false && inputs.environment == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ inputs.environment }}-${{ inputs.version }}
          path: ios/build/*.ipa
          retention-days: 7

      # Deployment summary
      - name: Deployment Summary
        if: inputs.publish == true
        run: |
          TRACK="TestFlight Internal"
          if [ "${{ inputs.branch }}" = "master" ]; then
            TRACK="App Store"
          elif [ "${{ inputs.branch }}" = "preprod" ]; then
            TRACK="TestFlight Beta"
          fi
          
          echo "## 🍎 iOS Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ inputs.branch }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **Track:** $TRACK" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ✅ Deployed successfully" >> $GITHUB_STEP_SUMMARY