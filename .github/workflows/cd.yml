# .github/workflows/cd.yml - Improved version with better version control
name: Continuous Deployment

on:
  push:
    branches:
      - master
      - develop
      - preprod

env:
  NODE_VERSION: 20.18.0

jobs:
  # Common setup and testing
  setup-and-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version_code: ${{ steps.version.outputs.version_code }}
      branch: ${{ steps.branch.outputs.name }}
      is_production: ${{ steps.branch.outputs.is_production }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn ci

      - name: Code Linting
        run: yarn lint

      - name: Type Checking
        run: yarn type-check

      - name: Unit & Integration tests
        run: yarn test:ci

      - name: Set Branch Info
        id: branch
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          echo "name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "is_production=$([[ '$BRANCH_NAME' == 'master' ]] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Generate Version and Version Code
        id: version
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          RUN_NUMBER=${{ github.run_number }}
          
          # Generate version name
          if [ "$BRANCH_NAME" = "master" ]; then
            VERSION="$PACKAGE_VERSION"
            BASE_CODE=2000000
          elif [ "$BRANCH_NAME" = "preprod" ]; then
            VERSION="$PACKAGE_VERSION-beta.$RUN_NUMBER"
            BASE_CODE=1500000
          else
            VERSION="$PACKAGE_VERSION-alpha.$RUN_NUMBER"
            BASE_CODE=1000000
          fi
          
          # Generate unique version code
          VERSION_CODE=$((BASE_CODE + RUN_NUMBER))
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION (code: $VERSION_CODE)"

      - name: Create Release Tag
        if: steps.branch.outputs.is_production == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.version.outputs.version }}
          git push origin v${{ steps.version.outputs.version }}

  # Production deployment with manual approval
  deploy-production:
    if: github.ref == 'refs/heads/master'
    needs: setup-and-test
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Create Production Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.setup-and-test.outputs.version }}
          release_name: 'Production Release v${{ needs.setup-and-test.outputs.version }}'
          body: |
            ## ðŸš€ Production Release
            **Version:** v${{ needs.setup-and-test.outputs.version }}
            **Version Code:** ${{ needs.setup-and-test.outputs.version_code }}
            **Deployed by:** ${{ github.actor }}
            **Commit:** ${{ github.sha }}

  # Android deployment
  deploy-android:
    needs: setup-and-test
    uses: ./.github/workflows/android-build.yml
    with:
      environment: 'release'
      publish: true
      version: ${{ needs.setup-and-test.outputs.version }}
      version_code: ${{ needs.setup-and-test.outputs.version_code }}
      branch: ${{ needs.setup-and-test.outputs.branch }}
    secrets: inherit

  # iOS deployment  
  deploy-ios:
    needs: setup-and-test
    uses: ./.github/workflows/ios-build.yml
    with:
      environment: 'release'
      publish: true
      version: ${{ needs.setup-and-test.outputs.version }}
      version_code: ${{ needs.setup-and-test.outputs.version_code }}
      branch: ${{ needs.setup-and-test.outputs.branch }}
    secrets: inherit